scalar JSON

enum EventType {
  TYPING_START
  TYPING_STOP
  TYPING_INACTIVE
  CREATE_COMMENT
  DELETE_COMMENT
}

type User {
  id: ID!
  name: String
  token: String
}

type Comment {
  id: ID!
  user: User
  body: String
  createdAt: String
}

type Conversation {
  id: ID!
  createdAt: String
  label: String
  comments: [Comment],
  users: [User]
  snippet: String
}

type Feed {
  conversations: [Conversation]
}

type Query {
  conversation(id: ID!): Conversation
  feed: Feed
  user: User
}

type Event {
  data: JSON
  type: EventType
  userId: ID!
  conversationId: ID!
}

type Mutation {
  createComment(conversationId: ID!, body: String!, userName: String!): Comment
  createConversation(label: String): Conversation
  deleteComment(id: ID!): Comment
  deleteConversation(id: ID!): Conversation
  createUser(name: String): User
  pushEvent(conversationId: ID!, data: JSON!, type: EventType!): Event
  addUserToConversation(conversationId: ID!): Conversation
}
